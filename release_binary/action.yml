name: 'release_binary'
description: ''
inputs:
  token:
    description: ''
    required: true
  directory:
    description: ''
    required: true
  release_branch:
    description: ''
    required: false
    default: 'refs/heads/main'
outputs:
  binary:
    description: ''
runs:
  using: "composite"
  steps:
#    - shell: bash
#      if: github.ref == ${{ inputs.release_branch }}
#      id: set_version
#      run: |
#        ABC=$(curl --silent \
#        -H "Accept: application/vnd.github.v3+json" \
#        -H "Authorization: token ${{ inputs.token }}" \
#          https://api.github.com/repos/${{ github.repository }}/releases/latest | jq .)
#
#          if [ "$(echo $ABC | jq -r .message)" = "Not Found" ]; then
#          NEW_VERSION="v1"
#          else
#          PREVIOUS_VERSION=$(echo $ABC | jq -r .name | cut -c2-)
#          NEW_VERSION="v"$((PREVIOUS_VERSION + 1))
#          fi
#
#          echo "::set-output name=version::$NEW_VERSION"
#
#    - uses: actions/create-release@v1
#      if: github.ref == ${{ inputs.release_branch }}
#      id: create_release
#      env:
#        GITHUB_TOKEN: ${{ inputs.token }}
#      with:
#        draft: false
#        prerelease: false
#        release_name: ${{ steps.set_version.outputs.version }}
#        tag_name: ${{ steps.set_version.outputs.version }}

    - shell: bash
      if: github.ref == ${{ inputs.release_branch }}
      id: set_version
      run: |
        echo "Upload from"
        echo ${{ inputs.directory }}
#
#
#    - uses: actions/upload-release-asset@v1
#      if: github.ref == 'refs/heads/main'
#      env:
#        GITHUB_TOKEN: ${{ inputs.token }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./bin/activity
#        asset_name: activity
#        asset_content_type: application/octet-stream